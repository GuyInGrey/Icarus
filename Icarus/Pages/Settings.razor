@page "/settings"
@attribute [Authorize(Roles = "Manager")]

@using DSharpPlus.Entities;
@using Icarus.Discord;
@using Icarus.ServerSetting;
@using Icarus.Models

@inject DataContext DataContext
@inject DiscordBotService Bot
@inject IConfiguration Config

<PageTitle>Guild Settings</PageTitle>

<h1>Guild Settings</h1>

@foreach (var group in ConfigData)
{
    <h3>@group.Key</h3>
            
    <table class="table" width="500">
        <thead>
            <tr>
                <th width="250">Name</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in group)
            {
                <tr>
                    <td width="250">
                        <span class="material-symbols-outlined nav-link-icon">
                                @TypeIconMap[data.Item1.Type]
                        </span>
                        <span>@data.Item1.Name</span><br>
                        <span class="description">@data.Item1.Description</span>
                    </td>
                    <td>
                        <span class="material-symbols-outlined nav-link-icon @(data.Item3 is null ? "bad" : "good")">
                            @(data.Item3 is null ? "cancel" : "check")
                        </span>
                        <input type="text" id="input-@data.Item1.Name" name="input-@data.Item1.Name"
                            value="@data.Item2?.Value" @oninput="(e) => OnInput(e, data.Item1.Key)"/><br>
                        <span class="description">@data.Item3</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<IGrouping<string, (ServerSettingAttribute, ServerSettingValue, string)>> ConfigData;

    Dictionary<ServerSettingType, string> TypeIconMap = new()
    {
        [ServerSettingType.Channel] = "numbers",
        [ServerSettingType.Role] = "group",
        [ServerSettingType.User] = "person",
        [ServerSettingType.Integer] = "123",
        [ServerSettingType.Decimal] = "123",
        [ServerSettingType.Text] = "abc",
        [ServerSettingType.ChannelCollection] = "library_books",
    };

    protected override void OnInitialized()
    {
        ConfigData = ServerSettingExtensions.LoadConfigValues(DataContext, Bot, Config);
    }

    void OnInput(ChangeEventArgs e, string key)
    {

        ServerSettingExtensions.Set(key, e.Value.ToString(), Bot, DataContext, Config);
        ConfigData = ServerSettingExtensions.LoadConfigValues(DataContext, Bot, Config);
    }
}
