@page "/filter"
@attribute [Authorize(Roles = "Manager")]

@using DSharpPlus.Entities;
@using Icarus.Discord;
@using Icarus.Discord.Commands;
@using Icarus.ServerSetting;
@using Icarus.Models
@using Icarus.Shared.Filter

@inject DataContext DataContext

<PageTitle>Mod Flag Filter</PageTitle>

<h1>Mod Flag Filter</h1>

@if (!ChannelsConfigured)
{
    <div>
        You must configure Mod Flags and Mod Logs in settings first.
    </div>
    return;
}

<AdjustFilter />

<br />
<br />

<div class="tab-list">
    @foreach (var t in ViewTabs)
    {
        <div class="tab @(t.name == CurrentViewTab ? "active" : "")" @onclick="(e) => CurrentViewTab = t.name">
            <span class="tab-icon">
                <span class="material-symbols-outlined nav-link-icon">
                    @t.icon
                </span>
            </span>
            <span class="tab-name">@t.name</span>
        </div>
    }
</div>

@if (CurrentViewTab == "Filters")
{
    foreach (var filter in DataContext.Filter)
    {
        <div>@filter.FilterText <p class="description">@filter.Type - @filter.FilterTextConverted</p></div>
    }
}
else if (CurrentViewTab == "Exceptions")
{
    DataContext.FilterException.ToList();
    foreach (var filter in DataContext.Filter)
    {
        if (filter.FilterExceptions is null || filter.FilterExceptions.Count == 0) { continue; }
        <div>
            @filter.FilterText
            <p class="description">@filter.Type - @filter.FilterTextConverted</p>
            <div class="description" style="margin-left: 20px;">
                @foreach (var ex in filter.FilterExceptions)
                {
                    <p>@ex.ExceptionText</p>
                }
            </div>
        </div>
    }
}
else if (CurrentViewTab == "Channel Conditions")
{
    DataContext.FilterChannelCondition.ToList();
    foreach (var filter in DataContext.Filter)
    {
        if (filter.FilterChannelConditions is null || filter.FilterChannelConditions.Count == 0) { continue; }
        <div>
            @filter.FilterText
            <p class="description">@filter.Type - @filter.FilterTextConverted</p>
            <div class="description" style="margin-left: 20px;">
                @foreach (var ex in filter.FilterChannelConditions)
                {
                    var channel = DiscordBotService.Guild.Channels.Select(c => c.Value).FirstOrDefault(c => c.Id == ex.ChannelId);
                    if (channel is null) { continue; }
                    <p>@ex.ChannelId - @channel.Name</p>
                }
            </div>
        </div>
    }
}
else if (CurrentViewTab == "Redirects")
{
    foreach (var redirect in DataContext.FilterChannelRedirect)
    {
        var source = DiscordBotService.Guild.Channels.Select(c => c.Value).FirstOrDefault(c => c.Id == redirect.ChannelId);
        var dest = DiscordBotService.Guild.Channels.Select(c => c.Value).FirstOrDefault(c => c.Id == redirect.PostChannelId);

        if (source is null || dest is null) { continue; }
        <div>
            #@source.Name (@source.Id) -> #@dest.Name (@dest.Id)
        </div>
    }
}

@code {
    bool ChannelsConfigured = true;

    public string CurrentViewTab;
    public List<(string name, string icon)> ViewTabs = new()
    {
        ("None", "check_box_outline_blank"),
        ("Filters", "warning"),
        ("Exceptions", "strikethrough_s"),
        ("Channel Conditions", "forum"),
        ("Redirects", "call_split"),
    };

    protected override void OnInitialized()
    {
        if (DataContext.Config_Channel(ServerSettings.Mod_ModFlags) is null || DataContext.Config_Channel(ServerSettings.Mod_ModLogs) is null)
        {
            ChannelsConfigured = false;
        }

        CurrentViewTab = ViewTabs[0].name;
    }
}